(function(){const d=document.createElement("link").relList;if(d&&d.supports&&d.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))f(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&f(s)}).observe(document,{childList:!0,subtree:!0});function p(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function f(e){if(e.ep)return;e.ep=!0;const n=p(e);fetch(e.href,n)}})();document.addEventListener("DOMContentLoaded",()=>{const a=document.getElementById("canvas");if(!a){console.error("Canvas element not found!");return}let d=30,p=30;a.width=d,a.height=p;const f=a.getContext("2d");if(!f){console.error("Failed to get canvas context!");return}const e=a.width||d,n=a.height||p;let s=[];for(let r=0;r<n;r++)for(let t=0;t<e;t++)s.push({x:t,y:r,i:0});a.addEventListener("click",r=>{const t=a.getBoundingClientRect(),l=d/window.innerWidth,o=p/window.innerHeight,c=Math.floor((r.clientX-t.left)*l),i=Math.floor((r.clientY-t.top)*o),u=i*d+c;console.log(c,i,a.width),u<s.length&&(s[u].i=255*10),console.log(c,i)});function P(){if(s.length===0){console.warn("No pixels to send!");return}const r=new ArrayBuffer(s.length*12),t=new DataView(r);s.forEach((o,c)=>{const i=c*12;t.setFloat32(i+0,o.x,!0),t.setFloat32(i+4,o.y,!0),t.setFloat32(i+8,o.i,!0)});const l=new Uint8Array(r);fetch("https://ripple-backend-4ksg.onrender.com/update",{method:"POST",headers:{"Content-Type":"application/octet-stream"},body:l}).then(o=>o.arrayBuffer()).then(o=>{const c=[],i=new DataView(o),u=o.byteLength/12;for(let h=0;h<u;h++){const g=h*12,m=i.getFloat32(g+0,!0),y=i.getFloat32(g+4,!0),x=i.getFloat32(g+8,!0);c.push({x:m,y,i:x})}console.log("Parsed pixels:",c),s=c,v()}).catch(o=>console.error("Fetch Error:",o))}function v(){if(!f)return;const r=f.getImageData(0,0,e,n),t=r.data;for(let l=0;l<s.length;l++){const{x:o,y:c,i}=s[l],u=i/255,h=0,g=0,m=0,y=Math.round(h+u*(255-h)),x=Math.round(g+u*(255-g)),b=Math.round(m+u*(255-m)),w=(c*e+o)*4;t[w]=y,t[w+1]=x,t[w+2]=b,t[w+3]=255}f.putImageData(r,0,0)}async function L(){for(;;){const r=performance.now();await P();const t=performance.now()-r,l=Math.max(500-t,0);await new Promise(o=>setTimeout(o,l))}}L()});
